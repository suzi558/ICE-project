@startuml
Class TrivialPursuit{
-team : List<Team>
-categories: List<Categories>
-currentRound: Round
- timer: Timer
+ startGame()
+ nextRound()
+ endGame()
+ displayScores()
}
Class Categories{
-int id
-String CategoryName
-ArrayList<Question> questions
-SQLite sqlite
+Categories(int id, String name)
+ void loadQuestions()
}
Class Team{
- String teamName
-int point
+Team()
+addPoint(int point)

}
Class TeamHandler{
-SQLite sqlite
+TeamHandler()
+void addTeam(Team team)
+SaveTeam()
+Team getWinner()
+updatePoint()
}
Class Timer{
+startTimer()
+stopTimer()
}
Class Questions{
-int id
-String text
-String correctAnswer
-String getOtherChoice1
-String getOtherChoice2
-int points
-SQLite sqlite
+Question(int id, String text, String correctAnswer, String getOtherChoice1, String getOtherChoice2, int points)
+int getId()
+String getText()
+String getCorrectAnswer()
+String getOtherChoice1()
+String getOtherChoice2()
+int getPoints()
}
Class SQLite{
+void connect()
+void saveData()
+ArrayList<Questions> getQuestionsByCategory(int categoryId)
+ArrayList<Categories> getCategories()
}
Class TextUI{
- Scanner scanner
+ void displayMsg(String s)
+ int promptNumeric(String msg)
+ String promptText(String msg)
+ int promptChoice(String msg, ArrayList<String> list)
}
Class Round{
 -int roundNumber
  -Timer timer
  -Categories currentCategory
  +Round(int roundNumber, Categories category)
  +void startRound()
  +void stopRound()
}
TrivialPursuit *-- Categories
TrivialPursuit *-- TeamHandler
TrivialPursuit *-- Timer
TrivialPursuit *-- TextUI

Categories *-- Questions
TeamHandler *-- Team
SQLite <-- Categories : "Henter og gemmer"
SQLite <-- Question : "Henter og gemmer"
Timer <-- Round

@enduml